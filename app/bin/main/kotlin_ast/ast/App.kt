/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package kotlin_ast.ast

// AST Parsing
// JSON Serialization for AST
import kotlinx.ast.common.*
import kotlinx.ast.common.klass.KlassDeclaration
import kotlinx.ast.common.klass.KlassIdentifier
import kotlinx.ast.grammar.kotlin.common.summary
import kotlinx.ast.grammar.kotlin.target.antlr.kotlin.KotlinGrammarAntlrKotlinParser
import kotlinx.serialization.Serializable

@Serializable data class ParameterTypeMapping(val paramName: String, val paramType: String)

@Serializable
data class UserCodeTypeMapping(
        val className: String,
        val classConstructor: List<ParameterTypeMapping>,
        val classMethods: Map<String, List<ParameterTypeMapping>>
)

fun main() {
    val source =
            AstSource.File(
                    "/home/george/work/genez.io/genezio-tests/projects/kotlin-test/server/app/src/main/kotlin/server/UserClass.kt"
            )

    val kotlinFile = KotlinGrammarAntlrKotlinParser.parseKotlinFile(source)
    kotlinFile
            .summary(attachRawAst = false)
            .onSuccess { astList ->
                astList.forEach { e ->
                    e.takeIf { predicate -> predicate is KlassDeclaration }?.let { astNode ->
                        e.print()
                        println((e as KlassDeclaration).keyword)
                        println((e as KlassDeclaration).info)
                        println("AST NODE")
                    }
                }
            }
            .onFailure { errors -> errors.forEach(::println) }
}
